service: strmr-video
frameworkVersion: '2'
configValidationMode: error
useDotenv: true

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ${opt:stage, 'eu-west-1'}

  httpApi:
    id: ${env:HTTP_API_ID}

  environment:
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    OUTPUT_BUCKET_NAME: ${env:OUTPUT_BUCKET_NAME}
    VIDEOS_TABLE_NAME: ${env:VIDEOS_TABLE_NAME}
    SERVE_VIDEO_URL: ${env:SERVE_VIDEO_URL}
    MEDIACONVERT_URL: ${env:MEDIACONVERT_URL}
    MEDIACONVERT_QUEUE_ARN: ${env:MEDIACONVERT_QUEUE_ARN}
    MEDIACONVERT_ROLE_ARN: ${env:MEDIACONVERT_ROLE_ARN}

  iam:
    role:
      statements:
        # S3
        - Effect: 'Allow'
          Action:
            - 's3:ListBucket'
          Resource: ${env:INPUT_BUCKET_ARN}
        - Effect: 'Allow'
          Action:
            - 's3:GetObject'
          Resource: '${env:INPUT_BUCKET_ARN}/*'
        # DynamoDB
        - Effect: 'Allow'
          Action:
            - 'dynamodb:Get*'
            - 'dynamodb:Update*'
            - 'dynamodb:Put*'
          Resource: ${env:VIDEOS_TABLE_ARN}
        - Effect: 'Allow'
          Action:
            - 'dynamodb:Query'
          Resource: '${env:VIDEOS_TABLE_ARN}/index/*'
        # MediaConvert
        - Effect: 'Allow'
          Action:
            - 'iam:PassRole'
          Resource: ${env:MEDIACONVERT_ROLE_ARN}
        - Effect: 'Allow'
          Action:
            - 'mediaconvert:CreateJob'
          Resource: ${env:MEDIACONVERT_QUEUE_ARN}

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  onUpload:
    handler: bin/onUpload
    events:
      - s3:
          bucket: ${env:INPUT_BUCKET_NAME}
          existing: true
          event: s3:ObjectCreated:*
          rules:
            - prefix: public/uploads/

  onComplete:
    handler: bin/onComplete
    events:
      - cloudwatchEvent:
          event:
            source:
              - 'aws.mediaconvert'
            detail:
              status:
                - 'COMPLETE'

  getByID:
    handler: bin/getByID
    events:
      - httpApi: 'GET /video/{id}'

  queryByJobStatus:
    handler: bin/queryByJobStatus
    events:
      - httpApi: 'GET /video'
